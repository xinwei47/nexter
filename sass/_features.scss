.features {
    grid-column: center-start / center-end;

    margin: 15rem 0;

    @supports (display: grid) {
        // build a child grid inside of a grid item
        display: grid;
        // make the columns responsive
        // minmax(min, max): keep in mind that using 1fr for the min value will be invalid. It only works for the max value.
        grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
        // no need to define rows as it will create implicit rows automatically with "auto" height (min-content)
        gap: 6rem;
        align-items: start;
    }
}

.feature {
    // if grid is not supported
    float: left;
    width: 33.33333%;
    margin-bottom: 6rem;

    @supports (display: grid) {
        width: 100%;
        margin-bottom: 0;
    }

    display: grid;
    grid-template-columns: min-content 1fr;
    row-gap: 1.5rem;
    column-gap: 2.5rem;

    &__icon {
        fill: $color-primary;
        width: 4.5rem;
        height: 4.5rem;

        // grid-row: 1/-1 will not work here. "-1" indicates the last explicit grid line
        grid-row: 1 / 3;
        transform: translateY(-1rem);
    }

    &__text {
        font-size: 1.7rem;
    }
}
